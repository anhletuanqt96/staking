/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface TransferHelperInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "BNB_CHAIN"
      | "BNB_CHAIN_TESTNET"
      | "BNB_CHAIN_TESTNET_WRAPPED"
      | "BNB_CHAIN_WRAPPED"
      | "HARDHAT_RUNTIME"
      | "HARDHAT_RUNTIME_WRAPPED"
      | "POLYGON"
      | "POLYGON_MUMBAI"
      | "POLYGON_MUMBAI_WRAPPED"
      | "POLYGON_WRAPPED"
      | "V_CHAIN"
      | "V_CHAIN_TESTNET"
      | "V_CHAIN_TESTNET_WRAPPED"
      | "V_CHAIN_WRAPPED"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "BNB_CHAIN", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "BNB_CHAIN_TESTNET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BNB_CHAIN_TESTNET_WRAPPED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "BNB_CHAIN_WRAPPED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "HARDHAT_RUNTIME",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "HARDHAT_RUNTIME_WRAPPED",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "POLYGON", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "POLYGON_MUMBAI",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POLYGON_MUMBAI_WRAPPED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POLYGON_WRAPPED",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "V_CHAIN", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "V_CHAIN_TESTNET",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "V_CHAIN_TESTNET_WRAPPED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "V_CHAIN_WRAPPED",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "BNB_CHAIN", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "BNB_CHAIN_TESTNET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BNB_CHAIN_TESTNET_WRAPPED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "BNB_CHAIN_WRAPPED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "HARDHAT_RUNTIME",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "HARDHAT_RUNTIME_WRAPPED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "POLYGON", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "POLYGON_MUMBAI",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POLYGON_MUMBAI_WRAPPED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POLYGON_WRAPPED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "V_CHAIN", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "V_CHAIN_TESTNET",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "V_CHAIN_TESTNET_WRAPPED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "V_CHAIN_WRAPPED",
    data: BytesLike
  ): Result;
}

export interface TransferHelper extends BaseContract {
  connect(runner?: ContractRunner | null): TransferHelper;
  waitForDeployment(): Promise<this>;

  interface: TransferHelperInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  BNB_CHAIN: TypedContractMethod<[], [bigint], "view">;

  BNB_CHAIN_TESTNET: TypedContractMethod<[], [bigint], "view">;

  BNB_CHAIN_TESTNET_WRAPPED: TypedContractMethod<[], [string], "view">;

  BNB_CHAIN_WRAPPED: TypedContractMethod<[], [string], "view">;

  HARDHAT_RUNTIME: TypedContractMethod<[], [bigint], "view">;

  HARDHAT_RUNTIME_WRAPPED: TypedContractMethod<[], [string], "view">;

  POLYGON: TypedContractMethod<[], [bigint], "view">;

  POLYGON_MUMBAI: TypedContractMethod<[], [bigint], "view">;

  POLYGON_MUMBAI_WRAPPED: TypedContractMethod<[], [string], "view">;

  POLYGON_WRAPPED: TypedContractMethod<[], [string], "view">;

  V_CHAIN: TypedContractMethod<[], [bigint], "view">;

  V_CHAIN_TESTNET: TypedContractMethod<[], [bigint], "view">;

  V_CHAIN_TESTNET_WRAPPED: TypedContractMethod<[], [string], "view">;

  V_CHAIN_WRAPPED: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "BNB_CHAIN"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BNB_CHAIN_TESTNET"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "BNB_CHAIN_TESTNET_WRAPPED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "BNB_CHAIN_WRAPPED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "HARDHAT_RUNTIME"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "HARDHAT_RUNTIME_WRAPPED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POLYGON"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "POLYGON_MUMBAI"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "POLYGON_MUMBAI_WRAPPED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "POLYGON_WRAPPED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "V_CHAIN"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "V_CHAIN_TESTNET"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "V_CHAIN_TESTNET_WRAPPED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "V_CHAIN_WRAPPED"
  ): TypedContractMethod<[], [string], "view">;

  filters: {};
}
