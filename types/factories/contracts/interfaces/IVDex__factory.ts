/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVDex,
  IVDexInterface,
} from "../../../contracts/interfaces/IVDex";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "newDispatcherWallet",
        type: "address",
      },
    ],
    name: "addDispatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dispatcherWallet",
        type: "address",
      },
    ],
    name: "reverseDispatcherState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "setFactoryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVDex__factory {
  static readonly abi = _abi;
  static createInterface(): IVDexInterface {
    return new Interface(_abi) as IVDexInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IVDex {
    return new Contract(address, _abi, runner) as unknown as IVDex;
  }
}
