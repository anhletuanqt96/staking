/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Reader,
  ReaderInterface,
} from "../../../contracts/peripherals/Reader";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "getFees",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "getTokenBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "getTokenBalancesWithSupplies",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_excludedAccounts",
        type: "address[]",
      },
    ],
    name: "getTokenSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109ce806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632ac0184c1461005c5780632e3e33421461008257806386d4d0f5146100a2578063d802178e146100b5578063fbdb05ca146100c8575b600080fd5b61006f61006a366004610869565b6100db565b6040519081526020015b60405180910390f35b610095610090366004610869565b61020a565b60405161007991906108b9565b6100956100b0366004610869565b610456565b6100956100c3366004610869565b610570565b61006f6100d6366004610869565b6106c9565b600080836001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014091906108fd565b905060005b835181101561020057600084828151811061016257610162610916565b60209081029190910101516040516370a0823160e01b81526001600160a01b0380831660048301529192506000918816906370a0823190602401602060405180830381865afa1580156101b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101dd91906108fd565b90506101e98185610942565b9350505080806101f890610955565b915050610145565b5090505b92915050565b60606000600290506000818451610221919061096e565b67ffffffffffffffff811115610239576102396107a1565b604051908082528060200260200182016040528015610262578160200160208202803683370190505b50905060005b845181101561044d57600085828151811061028557610285610916565b6020026020010151905060006001600160a01b0316816001600160a01b031603610314576001600160a01b03871631836102bf868561096e565b815181106102cf576102cf610916565b60209081029190910101526000836102e7868561096e565b6102f2906001610985565b8151811061030257610302610916565b6020026020010181815250505061043b565b6040516370a0823160e01b81526001600160a01b0388811660048301528216906370a0823190602401602060405180830381865afa15801561035a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037e91906108fd565b83610389868561096e565b8151811061039957610399610916565b602002602001018181525050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906108fd565b83610412868561096e565b61041d906001610985565b8151811061042d5761042d610916565b602002602001018181525050505b8061044581610955565b915050610268565b50949350505050565b60606000825167ffffffffffffffff811115610474576104746107a1565b60405190808252806020026020018201604052801561049d578160200160208202803683370190505b50905060005b835181101561020057846001600160a01b0316631ce9cb8f8583815181106104cd576104cd610916565b60200260200101516040518263ffffffff1660e01b815260040161050091906001600160a01b0391909116815260200190565b602060405180830381865afa15801561051d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054191906108fd565b82828151811061055357610553610916565b60209081029190910101528061056881610955565b9150506104a3565b60606000825167ffffffffffffffff81111561058e5761058e6107a1565b6040519080825280602002602001820160405280156105b7578160200160208202803683370190505b50905060005b83518110156102005760008482815181106105da576105da610916565b6020026020010151905060006001600160a01b0316816001600160a01b03160361062d57856001600160a01b03163183838151811061061b5761061b610916565b602002602001018181525050506106b7565b6040516370a0823160e01b81526001600160a01b0387811660048301528216906370a0823190602401602060405180830381865afa158015610673573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069791906108fd565b8383815181106106a9576106a9610916565b602002602001018181525050505b806106c181610955565b9150506105bd565b600080805b83518110156102005760008482815181106106eb576106eb610916565b60209081029190910101516040516370a0823160e01b81526001600160a01b0380831660048301529192506000918816906370a0823190602401602060405180830381865afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076691906108fd565b90506107728185610985565b93505050808061078190610955565b9150506106ce565b6001600160a01b038116811461079e57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b80356107c281610789565b919050565b600082601f8301126107d857600080fd5b8135602067ffffffffffffffff808311156107f5576107f56107a1565b8260051b604051601f19603f8301168101818110848211171561081a5761081a6107a1565b60405293845285810183019383810192508785111561083857600080fd5b83870191505b8482101561085e5761084f826107b7565b8352918301919083019061083e565b979650505050505050565b6000806040838503121561087c57600080fd5b823561088781610789565b9150602083013567ffffffffffffffff8111156108a357600080fd5b6108af858286016107c7565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156108f1578351835292840192918401916001016108d5565b50909695505050505050565b60006020828403121561090f57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102045761020461092c565b6000600182016109675761096761092c565b5060010190565b80820281158282048414176102045761020461092c565b808201808211156102045761020461092c56fea2646970667358221220f13876dc565713a63e688da45b02fdf26fc899af3f8749c1dff14b2294f8461964736f6c63430008120033";

type ReaderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReaderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reader__factory extends ContractFactory {
  constructor(...args: ReaderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Reader & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reader__factory {
    return super.connect(runner) as Reader__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReaderInterface {
    return new Interface(_abi) as ReaderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Reader {
    return new Contract(address, _abi, runner) as unknown as Reader;
  }
}
