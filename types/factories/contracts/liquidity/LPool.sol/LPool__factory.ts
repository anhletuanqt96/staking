/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LPool,
  LPoolInterface,
} from "../../../../contracts/liquidity/LPool.sol/LPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "LONG_INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHORT_INDEX",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sellToken",
        type: "address",
      },
    ],
    name: "borrowBehalf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "_owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "_longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "_shortToken",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "_marginLimit",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "_feeAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "_isWethPool",
            type: "bool",
          },
        ],
        internalType: "struct ILPool.Initialization",
        name: "initialization",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isWethPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611668806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a457c2d71161007c578063a457c2d7146102bc578063a9059cbb146102cf578063c40f6aa9146102e2578063cc2c929e146102ea578063dd62ed3e146102f7578063f2fde38b1461030a57600080fd5b806370a0823114610256578063715018a61461027f5780638da5cb5b146102875780638f840ddd1461029857806395d89b41146102a15780639dc29fac146102a957600080fd5b806323b872dd1161011557806323b872dd146101c2578063313ce567146101d557806339509351146101f257806340c10f19146102055780634f64b2be1461021857806363762d6d1461024357600080fd5b8063062e0d691461015257806306fdde031461016d578063095ea7b3146101825780631419398b146101a557806318160ddd146101ba575b600080fd5b61015a600081565b6040519081526020015b60405180910390f35b61017561031d565b6040516101649190611279565b6101956101903660046112e3565b6103af565b6040519015158152602001610164565b6101b86101b336600461130d565b6103c9565b005b609f5461015a565b6101956101d0366004611349565b6103ec565b609c54610100900460ff1660405160ff9091168152602001610164565b6101956102003660046112e3565b610410565b6101b86102133660046112e3565b610432565b61022b610226366004611385565b610448565b6040516001600160a01b039091168152602001610164565b6101b861025136600461139e565b610468565b61015a6102643660046113b6565b6001600160a01b03166000908152609d602052604090205490565b6101b8610811565b6033546001600160a01b031661022b565b61015a60995481565b610175610825565b6101b86102b73660046112e3565b610834565b6101956102ca3660046112e3565b610846565b6101956102dd3660046112e3565b6108c1565b61015a600181565b609c546101959060ff1681565b61015a6103053660046113d8565b6108cf565b6101b86103183660046113b6565b6108fa565b606060a0805461032c9061140b565b80601f01602080910402602001604051908101604052809291908181526020018280546103589061140b565b80156103a55780601f1061037a576101008083540402835291602001916103a5565b820191906000526020600020905b81548152906001019060200180831161038857829003601f168201915b5050505050905090565b6000336103bd818585610973565b60019150505b92915050565b6103d1610a97565b6103dd83338484610af0565b6103e76001606555565b505050565b6000336103fa858285610b55565b610405858585610bcf565b506001949350505050565b6000336103bd81858561042383836108cf565b61042d9190611455565b610973565b61043a610d9d565b6104448282610df7565b5050565b609a816002811061045857600080fd5b01546001600160a01b0316905081565b600054610100900460ff16158080156104885750600054600160ff909116105b806104a25750303b1580156104a2575060005460ff166001145b61050a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561052d576000805461ff0019166101001790555b610535610ed6565b61053d610f05565b600061054f60a08401608085016113b6565b6001600160a01b03160361059a5760405162461bcd60e51b81526020600482015260126024820152711199594818d85b9b9bdd081899481b9d5b1b60721b6044820152606401610501565b60006105a960208401846113b6565b6001600160a01b0316036105f65760405162461bcd60e51b815260206004820152601460248201527313dddb995c8818d85b9b9bdd081899481b9d5b1b60621b6044820152606401610501565b600061060860408401602085016113b6565b6001600160a01b03160361065e5760405162461bcd60e51b815260206004820152601960248201527f4c6f6e6720746f6b656e2063616e6e6f74206265206e756c6c000000000000006044820152606401610501565b600061067060608401604085016113b6565b6001600160a01b0316036106c65760405162461bcd60e51b815260206004820152601a60248201527f53686f727420746f6b656e2063616e6e6f74206265206e756c6c0000000000006044820152606401610501565b6106db6106d660208401846113b6565b610f34565b60408051808201909152600b81526a159111560813585c9ad95d60aa1b602082015260a09061070a90826114cc565b50604080518082019091526002815261564d60f01b602082015260a19061073190826114cc565b50609c805461ff00191661120017905561075160408301602084016113b6565b609a60000180546001600160a01b0319166001600160a01b039290921691909117905561078460608301604084016113b6565b609a60010180546001600160a01b0319166001600160a01b03929092169190911790556107b760c0830160a0840161159a565b609c805460ff19169115159190911790558015610444576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b610819610d9d565b6108236000610f34565b565b606060a1805461032c9061140b565b61083c610d9d565b6104448282610f86565b6000338161085482866108cf565b9050838110156108b45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610501565b6104058286868403610973565b6000336103bd818585610bcf565b6001600160a01b039182166000908152609e6020908152604080832093909416825291909152205490565b610902610d9d565b6001600160a01b0381166109675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610501565b61097081610f34565b50565b6001600160a01b0383166109d55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610501565b6001600160a01b038216610a365760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610501565b6001600160a01b038381166000818152609e602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600260655403610ae95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610501565b6002606555565b610afd81848460006110d4565b604080516001600160a01b038087168252851660208201529081018390527f312a5e5e1079f5dda4e95dbbd0b908b291fd5b992ef22073643ab691572c5b529060600160405180910390a150505050565b6001606555565b6000610b6184846108cf565b90506000198114610bc95781811015610bbc5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610501565b610bc98484848403610973565b50505050565b6001600160a01b038316610c335760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610501565b6001600160a01b038216610c955760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610501565b6001600160a01b0383166000908152609d602052604090205481811015610d0d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610501565b6001600160a01b038085166000908152609d6020526040808220858503905591851681529081208054849290610d44908490611455565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d9091815260200190565b60405180910390a3610bc9565b6033546001600160a01b031633146108235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610501565b6001600160a01b038216610e4d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610501565b80609f6000828254610e5f9190611455565b90915550506001600160a01b0382166000908152609d602052604081208054839290610e8c908490611455565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff16610efd5760405162461bcd60e51b8152600401610501906115b7565b610823611222565b600054610100900460ff16610f2c5760405162461bcd60e51b8152600401610501906115b7565b610823611252565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610fe65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610501565b6001600160a01b0382166000908152609d60205260409020548181101561105a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610501565b6001600160a01b0383166000908152609d602052604081208383039055609f8054849290611089908490611602565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b609c5460ff1680156110e35750805b156111a857604051632e1a7d4d60e01b8152600481018390526001600160a01b03851690632e1a7d4d90602401600060405180830381600087803b15801561112a57600080fd5b505af115801561113e573d6000803e3d6000fd5b505050506000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461118f576040519150601f19603f3d011682016040523d82523d6000602084013e611194565b606091505b50509050806111a257600080fd5b50610bc9565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af11580156111f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121b9190611615565b5050505050565b600054610100900460ff166112495760405162461bcd60e51b8152600401610501906115b7565b61082333610f34565b600054610100900460ff16610b4e5760405162461bcd60e51b8152600401610501906115b7565b600060208083528351808285015260005b818110156112a65785810183015185820160400152820161128a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146112de57600080fd5b919050565b600080604083850312156112f657600080fd5b6112ff836112c7565b946020939093013593505050565b60008060006060848603121561132257600080fd5b61132b846112c7565b925060208401359150611340604085016112c7565b90509250925092565b60008060006060848603121561135e57600080fd5b611367846112c7565b9250611375602085016112c7565b9150604084013590509250925092565b60006020828403121561139757600080fd5b5035919050565b600060c082840312156113b057600080fd5b50919050565b6000602082840312156113c857600080fd5b6113d1826112c7565b9392505050565b600080604083850312156113eb57600080fd5b6113f4836112c7565b9150611402602084016112c7565b90509250929050565b600181811c9082168061141f57607f821691505b6020821081036113b057634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156103c3576103c361143f565b634e487b7160e01b600052604160045260246000fd5b601f8211156103e757600081815260208120601f850160051c810160208610156114a55750805b601f850160051c820191505b818110156114c4578281556001016114b1565b505050505050565b815167ffffffffffffffff8111156114e6576114e6611468565b6114fa816114f4845461140b565b8461147e565b602080601f83116001811461152f57600084156115175750858301515b600019600386901b1c1916600185901b1785556114c4565b600085815260208120601f198616915b8281101561155e5788860151825594840194600190910190840161153f565b508582101561157c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b801515811461097057600080fd5b6000602082840312156115ac57600080fd5b81356113d18161158c565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b818103818111156103c3576103c361143f565b60006020828403121561162757600080fd5b81516113d18161158c56fea2646970667358221220e9314f6268d10407e1d02e2570ebd5cac920e4a82a5167c374480a1482d0141e64736f6c63430008120033";

type LPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPool__factory extends ContractFactory {
  constructor(...args: LPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LPool__factory {
    return super.connect(runner) as LPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPoolInterface {
    return new Interface(_abi) as LPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LPool {
    return new Contract(address, _abi, runner) as unknown as LPool;
  }
}
