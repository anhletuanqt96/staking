/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  WrappedTokenMock,
  WrappedTokenMockInterface,
} from "../../../contracts/mock/WrappedTokenMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001fcb38038062001fcb833981810160405260408110156200003857600080fd5b81019080805160405193929190846401000000008211156200005957600080fd5b9083019060208201858111156200006f57600080fd5b82516401000000008111828201881017156200008a57600080fd5b82525081516020918201929091019080838360005b83811015620000b95781810151838201526020016200009f565b50505050905090810190601f168015620000e75780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010b57600080fd5b9083019060208201858111156200012157600080fd5b82516401000000008111828201881017156200013c57600080fd5b82525081516020918201929091019080838360005b838110156200016b57818101518382015260200162000151565b50505050905090810190601f168015620001995780820380516001836020036101000a031916815260200191505b506040818101905260018152603160f81b6020820152859350839250905081846003620001c7838262000452565b506004620001d6828262000452565b505050620001f4600583620002bc60201b62000c961790919060201c565b6101205262000211816006620002bc602090811b62000c9617901c565b61014052815160208084019190912060e052815190820120610100524660a0526200029f60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620002b4336200030c565b505062000593565b6000602083511015620002dc57620002d4836200035e565b905062000306565b82620002f383620003aa60201b62000cc71760201c565b9062000300908262000452565b5060ff90505b92915050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080829050601f8151111562000395578260405163305a27a960e01b81526004016200038c91906200051e565b60405180910390fd5b8051620003a2826200056e565b179392505050565b90565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003d857607f821691505b602082108103620003f957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044d57600081815260208120601f850160051c81016020861015620004285750805b601f850160051c820191505b81811015620004495782815560010162000434565b5050505b505050565b81516001600160401b038111156200046e576200046e620003ad565b62000486816200047f8454620003c3565b84620003ff565b602080601f831160018114620004be5760008415620004a55750858301515b600019600386901b1c1916600185901b17855562000449565b600085815260208120601f198616915b82811015620004ef57888601518255948401946001909101908401620004ce565b50858210156200050e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b818110156200054d578581018301518582016040015282016200052f565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003f95760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516119dd620005ee600039600061098f01526000610964015260006112d5015260006112ad01526000611208015260006112320152600061125c01526119dd6000f3fe6080604052600436106101445760003560e01c8063715018a6116100b6578063a457c2d71161006f578063a457c2d7146105ec578063a9059cbb14610625578063d0e30db01461065e578063d505accf14610666578063dd62ed3e146106c4578063f2fde38b146106ff57600080fd5b8063715018a6146103be5780637ecebe00146103d357806384b0196e146104065780638da5cb5b1461056957806395d89b411461059e5780639dc29fac146105b357600080fd5b8063313ce56711610108578063313ce567146102bf5780633408e470146102e45780633644e515146102f7578063395093511461030c57806340c10f191461034557806370a082311461037e57600080fd5b806306fdde0314610158578063095ea7b3146101e257806318160ddd1461022f57806323b872dd146102525780632e1a7d4d1461029557600080fd5b3661015357610151610732565b005b600080fd5b34801561016457600080fd5b5061016d610774565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a757818101518382015260200161018f565b50505050905090810190601f1680156101d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101ee57600080fd5b5061021b6004803603604081101561020557600080fd5b506001600160a01b038135169060200135610806565b604080519115158252519081900360200190f35b34801561023b57600080fd5b506002545b60408051918252519081900360200190f35b34801561025e57600080fd5b5061021b6004803603606081101561027557600080fd5b506001600160a01b03813581169160208101359091169060400135610820565b3480156102a157600080fd5b50610151600480360360208110156102b857600080fd5b5035610844565b3480156102cb57600080fd5b5060126040805160ff9092168252519081900360200190f35b3480156102f057600080fd5b5046610240565b34801561030357600080fd5b506102406108e5565b34801561031857600080fd5b5061021b6004803603604081101561032f57600080fd5b506001600160a01b0381351690602001356108f4565b34801561035157600080fd5b506101516004803603604081101561036857600080fd5b506001600160a01b038135169060200135610916565b34801561038a57600080fd5b50610240600480360360208110156103a157600080fd5b50356001600160a01b031660009081526020819052604090205490565b3480156103ca57600080fd5b50610151610924565b3480156103df57600080fd5b50610240600480360360208110156103f657600080fd5b50356001600160a01b0316610938565b34801561041257600080fd5b5061041b610956565b60405180886001600160f81b03191681526020018060200180602001878152602001866001600160a01b031681526020018581526020018060200184810384528a818151815260200191508051906020019080838360005b8381101561048b578181015183820152602001610473565b50505050905090810190601f1680156104b85780820380516001836020036101000a031916815260200191505b5084810383528951815289516020918201918b019080838360005b838110156104eb5781810151838201526020016104d3565b50505050905090810190601f1680156105185780820380516001836020036101000a031916815260200191505b508481038252855181528551602091820191808801910280838360005b8381101561054d578181015183820152602001610535565b505050509050019a505050505050505050505060405180910390f35b34801561057557600080fd5b506009546001600160a01b0316604080516001600160a01b039092168252519081900360200190f35b3480156105aa57600080fd5b5061016d6109df565b3480156105bf57600080fd5b50610151600480360360408110156105d657600080fd5b506001600160a01b0381351690602001356109ee565b3480156105f857600080fd5b5061021b6004803603604081101561060f57600080fd5b506001600160a01b038135169060200135610a00565b34801561063157600080fd5b5061021b6004803603604081101561064857600080fd5b506001600160a01b038135169060200135610a80565b610151610732565b34801561067257600080fd5b50610151600480360360e081101561068957600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135610a8e565b3480156106d057600080fd5b50610240600480360360408110156106e757600080fd5b506001600160a01b0381358116916020013516610bf2565b34801561070b57600080fd5b506101516004803603602081101561072257600080fd5b50356001600160a01b0316610c1d565b61073c3334610cca565b60408051348152905133917fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c919081900360200190a2565b606060038054610783906117a6565b80601f01602080910402602001604051908101604052809291908181526020018280546107af906117a6565b80156107fc5780601f106107d1576101008083540402835291602001916107fc565b820191906000526020600020905b8154815290600101906020018083116107df57829003601f168201915b5050505050905090565b600033610814818585610d89565b60019150505b92915050565b60003361082e858285610eae565b610839858585610f28565b506001949350505050565b336000908152602081905260409020548111156108745760405163569d45cf60e11b815260040160405180910390fd5b61087e33826110cc565b604051339082156108fc029083906000818181858888f193505050501580156108ab573d6000803e3d6000fd5b5060408051828152905133917f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65919081900360200190a250565b60006108ef6111fb565b905090565b6000336108148185856109078383610bf2565b61091191906117da565b610d89565b6109208282610cca565b5050565b61092c611326565b6109366000611380565b565b6001600160a01b03811660009081526007602052604081205461081a565b60006060808280808361098a7f000000000000000000000000000000000000000000000000000000000000000060056113d2565b6109b57f000000000000000000000000000000000000000000000000000000000000000060066113d2565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b606060048054610783906117a6565b6109f6611326565b61092082826110cc565b60003381610a0e8286610bf2565b905083811015610a735760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6108398286868403610d89565b600033610814818585610f28565b83421115610ade5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610a6a565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b0d8c611476565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b688261149e565b90506000610b78828787876114cb565b9050896001600160a01b0316816001600160a01b031614610bdb5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610a6a565b610be68a8a8a610d89565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610c25611326565b6001600160a01b038116610c8a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a6a565b610c9381611380565b50565b6000602083511015610cb257610cab836114f3565b905061081a565b81610cbd848261185f565b5060ff905061081a565b90565b6001600160a01b038216610d205760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610a6a565b8060026000828254610d3291906117da565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038316610deb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610a6a565b6001600160a01b038216610e4c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610a6a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610eba8484610bf2565b90506000198114610f225781811015610f155760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610a6a565b610f228484848403610d89565b50505050565b6001600160a01b038316610f8c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610a6a565b6001600160a01b038216610fee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610a6a565b6001600160a01b038316600090815260208190526040902054818110156110665760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610a6a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610f22565b6001600160a01b03821661112c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610a6a565b6001600160a01b038216600090815260208190526040902054818110156111a05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610a6a565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610ea1565b505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561125457507f000000000000000000000000000000000000000000000000000000000000000046145b1561127e57507f000000000000000000000000000000000000000000000000000000000000000090565b6108ef604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6009546001600160a01b031633146109365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a6a565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff83146113e557610cab83611531565b8180546113f1906117a6565b80601f016020809104026020016040519081016040528092919081815260200182805461141d906117a6565b801561146a5780601f1061143f5761010080835404028352916020019161146a565b820191906000526020600020905b81548152906001019060200180831161144d57829003601f168201915b5050505050905061081a565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600061081a6114ab6111fb565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006114dc87878787611570565b915091506114e981611634565b5095945050505050565b600080829050601f8151111561151e578260405163305a27a960e01b8152600401610a6a919061191f565b80516115298261196d565b179392505050565b6060600061153e8361177e565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156115a7575060009050600361162b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156115fb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116245760006001925092505061162b565b9150600090505b94509492505050565b600081600481111561164857611648611991565b036116505750565b600181600481111561166457611664611991565b036116b15760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a6a565b60028160048111156116c5576116c5611991565b036117125760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a6a565b600381600481111561172657611726611991565b03610c935760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a6a565b600060ff8216601f81111561081a57604051632cd44ac360e21b815260040160405180910390fd5b600181811c908216806117ba57607f821691505b60208210810361149857634e487b7160e01b600052602260045260246000fd5b8082018082111561081a57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f8211156111f657600081815260208120601f850160051c810160208610156118385750805b601f850160051c820191505b8181101561185757828155600101611844565b505050505050565b815167ffffffffffffffff811115611879576118796117fb565b61188d8161188784546117a6565b84611811565b602080601f8311600181146118c257600084156118aa5750858301515b600019600386901b1c1916600185901b178555611857565b600085815260208120601f198616915b828110156118f1578886015182559484019460019091019084016118d2565b508582101561190f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b8181101561194c57858101830151858201604001528201611930565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156114985760001960209190910360031b1b16919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122088ce29ab299d3a845532b9c774fcbcdc8636428150476312915aa6741a724e0764736f6c63430008120033";

type WrappedTokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedTokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedTokenMock__factory extends ContractFactory {
  constructor(...args: WrappedTokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      WrappedTokenMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WrappedTokenMock__factory {
    return super.connect(runner) as WrappedTokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedTokenMockInterface {
    return new Interface(_abi) as WrappedTokenMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WrappedTokenMock {
    return new Contract(address, _abi, runner) as unknown as WrappedTokenMock;
  }
}
